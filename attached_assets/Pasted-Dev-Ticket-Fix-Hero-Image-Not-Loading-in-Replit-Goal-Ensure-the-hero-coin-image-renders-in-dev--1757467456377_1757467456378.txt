Dev Ticket — Fix Hero Image Not Loading in Replit

Goal: Ensure the hero coin image renders in dev (Replit) and in Vercel builds.

Tasks

Normalize & place asset

Convert the coin file to web-friendly size (≤ 512–1024px, < 200KB).

Save as public/ftfc-coin.jpg (all lowercase).
Command (mac):
sips -Z 1024 path/to/IMG_9457.JPG --out public/ftfc-coin.jpg

Ensure fallback exists

Put a fallback at public/logo.svg (or change the code to a file that exists).

Use Next static import (avoids path typos)

Import the image in the component and render with next/image. This catches missing files at build time.

TypeScript & config sanity

No extra typings needed for Next static image imports.

Keep images.unoptimized = true in next.config.mjs if you prefer (already fine for Vercel).

export default { images: { unoptimized: true } }


Verify in Replit terminal

npm run dev then hit the dev URL.

Open the dev tools → Network → filter “ftfc-coin” to confirm 200.

If you still see 404, check the exact filename/case and location.

Commit

git add public/ftfc-coin.jpg public/logo.svg components/hero.tsx

git commit -m "fix(hero): use static image import and ensure public assets"

Deploy to Vercel.

Patched components/hero.tsx

This version:

Uses next/image with a static import (build-time path check).

Keeps your styles/CTAs.

Provides a client-side fallback to /logo.svg if the image errors (via a small state toggle).

"use client";

import Image from "next/image";
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { env } from "@/lib/env";
import { useToast } from "@/hooks/use-toast";
import { Copy, Rocket, TrendingUp } from "lucide-react";

// IMPORTANT: file must exist at public/ftfc-coin.jpg (lowercase)
import coinImg from "@/public/ftfc-coin.jpg"; // ✅ build-time checked

export default function Hero() {
  const { toast } = useToast();
  const [fallback, setFallback] = useState(false);

  const copyContract = async () => {
    try {
      await navigator.clipboard.writeText(env.TOKEN_ADDRESS);
      toast({ title: "Contract Copied!", description: "Contract address copied to clipboard" });
    } catch {
      toast({ title: "Copy Failed", description: "Failed to copy contract address", variant: "destructive" });
    }
  };

  return (
    <section className="min-h-screen flex items-center justify-center relative overflow-hidden">
      <div className="absolute inset-0 bg-gradient-to-br from-ftf-purple via-ftf-deeppurple to-ftf-purple opacity-90" />
      <div className="relative z-10 text-center px-4 max-w-4xl mx-auto">
        {/* Coin Logo */}
        <div className="mx-auto w-80 h-80 mb-8 coin-shadow float-animation">
          {!fallback ? (
            <Image
              src={coinImg}
              alt="FTFC Coin - Fuck The Farmers"
              className="w-full h-full object-contain rounded-full"
              priority
              sizes="(max-width: 768px) 60vw, 320px"
              onError={() => setFallback(true)}
            />
          ) : (
            <img
              src="/logo.svg"
              alt="FTFC Logo"
              className="w-full h-full object-contain rounded-full"
            />
          )}
        </div>

        <h1 className="font-display text-6xl md:text-8xl font-bold mb-4 tracking-tight">
          <span className="text-gradient" data-testid="hero-title-line1">FUCK THE</span><br />
          <span className="text-ftf-gold" data-testid="hero-title-line2">FARMERS</span>
        </h1>

        <p className="text-xl md:text-2xl mb-2 opacity-90 font-semibold" data-testid="hero-subtitle">
          We don't yield, we <span className="text-ftf-gold">BUILD</span>
        </p>

        <p className="text-lg mb-8 opacity-80 max-w-2xl mx-auto" data-testid="hero-description">
          The first meme coin that says FUCK FARMERS. No crop yields, no harvest promises.
          Just pure, unfiltered anti-agricultural sentiment.
        </p>

        {/* CTA Buttons */}
        <div className="flex flex-wrap items-center justify-center gap-4 mb-12">
          <Button
            className="btn-cta px-8 py-4 text-lg"
            onClick={() => window.open(env.BUY_URL, "_blank")}
            data-testid="hero-buy-button"
          >
            <Rocket className="mr-2" size={20} />
            BUY $FTFC
          </Button>
          <Button
            className="btn-teal px-8 py-4 text-lg"
            onClick={() => window.open(env.CHART_URL, "_blank")}
            data-testid="hero-chart-button"
          >
            <TrendingUp className="mr-2" size={20} />
            CHART
          </Button>
          <Button
            onClick={copyContract}
            className="border-2 border-ftf-gold text-ftf-gold px-8 py-4 rounded-full text-lg font-bold uppercase tracking-wide hover:bg-ftf-gold hover:text-ftf-deeppurple transition-all"
            data-testid="hero-copy-button"
          >
            <Copy className="mr-2" size={20} />
            COPY CONTRACT
          </Button>
        </div>

        {/* Live Market Data (static placeholders) */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 max-w-3xl mx-auto">
          <div className="glass-card rounded-2xl p-4 text-center" data-testid="market-price">
            <div className="text-2xl font-bold text-ftf-gold">$0.0042</div>
            <div className="text-sm opacity-80">Price</div>
          </div>
          <div className="glass-card rounded-2xl p-4 text-center" data-testid="market-cap">
            <div className="text-2xl font-bold text-ftf-teal">$4.2M</div>
            <div className="text-sm opacity-80">Market Cap</div>
          </div>
          <div className="glass-card rounded-2xl p-4 text-center" data-testid="market-volume">
            <div className="text-2xl font-bold text-ftf-lilac">$420K</div>
            <div className="text-sm opacity-80">24h Volume</div>
          </div>
          <div className="glass-card rounded-2xl p-4 text-center" data-testid="market-holders">
            <div className="text-2xl font-bold text-ftf-gold">6,969</div>
            <div className="text-sm opacity-80">Holders</div>
          </div>
        </div>
      </div>
    </section>
  );
}